version: '3.8'

services:
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883"
      - "8883:8883"
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - ./config/mosquitto/passwd:/mosquitto/config/passwd:ro
      - ./certs:/mosquitto/certs:ro
      - mqtt-data:/mosquitto/data
      - mqtt-log:/mosquitto/log
    networks:
      - poc-network
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-t", "$$SYS/#", "-C", "1", "-i", "healthcheck", "-W", "3"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123!
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - poc-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  oracle:
    build: 
      context: ./config/oracle
      dockerfile: Dockerfile
    environment:
      - ORACLE_PASSWORD=oracle123!
      - APP_USER=billettique
      - APP_USER_PASSWORD=billettique123!
      - ORACLE_DATABASE=BILLETDB
      - ORACLE_MEMORY_MIN=2G
      - ORACLE_MEMORY_MAX=3G
      - ENABLE_ARCHIVELOG=true
      - TZ=Europe/Paris
    ports:
      - "1521:1521"
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./config/oracle/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - poc-network
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/oracle123!@//localhost:1521/BILLETDB as sysdba", "exit"]
      interval: 2m
      timeout: 30s
      retries: 5
      start_period: 15m
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 3G
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    shm_size: '2.5gb'

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./config/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
      - prometheus-data:/prometheus
    networks:
      - poc-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123!
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - poc-network
    depends_on:
      - prometheus
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

networks:
  poc-network:
    driver: bridge

volumes:
  mqtt-data:
  mqtt-log:
  rabbitmq-data:
  oracle-data:
  prometheus-data:
  grafana-data: